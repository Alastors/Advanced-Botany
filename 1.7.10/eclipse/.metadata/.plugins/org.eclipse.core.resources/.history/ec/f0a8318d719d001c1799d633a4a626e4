package ab.client.render.entity;

import java.awt.Color;
import java.util.Random;

import org.lwjgl.opengl.GL11;

import ab.client.core.ClientHelper;
import ab.common.block.BlockLebethronWood;
import ab.common.lib.register.BlockListAB;
import net.minecraft.block.Block;
import net.minecraft.client.Minecraft;
import net.minecraft.client.entity.AbstractClientPlayer;
import net.minecraft.client.renderer.ItemRenderer;
import net.minecraft.client.renderer.OpenGlHelper;
import net.minecraft.client.renderer.RenderBlocks;
import net.minecraft.client.renderer.Tessellator;
import net.minecraft.client.renderer.entity.Render;
import net.minecraft.client.renderer.texture.TextureMap;
import net.minecraft.entity.Entity;
import net.minecraft.entity.item.EntityItem;
import net.minecraft.item.ItemStack;
import net.minecraft.util.IIcon;
import net.minecraft.util.ResourceLocation;
import net.minecraft.world.World;
import net.minecraftforge.client.ForgeHooksClient;
import net.minecraftforge.client.IItemRenderer.ItemRendererHelper;
import vazkii.botania.client.core.handler.ClientTickHandler;

public class RenderEntityAlphirinePortal extends Render {

	public void doRender(Entity entity, double x, double y, double z, float fl, float fl1) {
		double worldTime = (entity.worldObj == null) ? 0.0D : (ClientTickHandler.ticksInGame + fl1);
		if (entity != null)
			worldTime += (new Random(((int)entity.posX ^ (int)entity.posY ^ (int)entity.posZ))).nextInt(360); 	
		Minecraft mc = Minecraft.getMinecraft();
		float burn = Math.min(1.0f, entity.ticksExisted * 0.0561f);
		GL11.glPushMatrix();
		GL11.glTranslated(x, y, z);
		GL11.glEnable(3042);
		burn = Math.max(0.0f, (float)(burn + (Math.sin(worldTime / 3.2f) / 9.0f)));
		GL11.glScalef(burn / 3.15f, burn / 3.15f, burn / 3.15f);
	    GL11.glRotatef(180.0f - this.renderManager.playerViewY, 0.0f, 1.0f, 0.0f);
		GL11.glRotatef(-this.renderManager.playerViewX, 1.0f, 0.0f, 0.0f);
		GL11.glDisable(GL11.GL_CULL_FACE);
		mc.renderEngine.bindTexture(TextureMap.locationBlocksTexture);
		ClientHelper.setLightmapTextureCoords();
		ClientHelper.renderIcon(BlockLebethronWood.iconPortal, 220);
		GL11.glEnable(GL11.GL_CULL_FACE);
		GL11.glDisable(3042);
		GL11.glPopMatrix();
	}	
	
	public void renderItemStack(ItemStack stack, World world, int posX, int posY, int posZ) {
		if (stack != null) {
			Minecraft mc = Minecraft.getMinecraft();
			mc.renderEngine.bindTexture((stack.getItem() instanceof net.minecraft.item.ItemBlock) ? TextureMap.locationBlocksTexture : TextureMap.locationItemsTexture);
			float s = 0.25F;
			GL11.glScalef(s, s, s);
			GL11.glScalef(2.0F, 2.0F, 2.0F);
			if (!ForgeHooksClient.renderEntityItem(new EntityItem(world, posX, posY, posZ, stack), stack, 0.0F, 0.0F, world.rand, mc.renderEngine, RenderBlocks.getInstance(), 1)) {
				GL11.glScalef(0.5F, 0.5F, 0.5F);
				if (stack.getItem() instanceof net.minecraft.item.ItemBlock && RenderBlocks.renderItemIn3d(Block.getBlockFromItem(stack.getItem()).getRenderType())) {
					GL11.glScalef(0.5F, 0.5F, 0.5F);
					GL11.glTranslatef(1.0F, 1.1F, 0.0F);
					GL11.glPushMatrix();
					RenderBlocks.getInstance().renderBlockAsItem(Block.getBlockFromItem(stack.getItem()), stack.getItemDamage(), 1.0F);
					GL11.glPopMatrix();
					GL11.glTranslatef(-1.0F, -1.1F, 0.0F);
					GL11.glScalef(2.0F, 2.0F, 2.0F);
				} else {
					int renderPass = 0;
					do {
						IIcon icon = stack.getItem().getIcon(stack, renderPass);
						if (icon == null)
							continue; 
						Color color = new Color(stack.getItem().getColorFromItemStack(stack, renderPass));
						GL11.glColor3ub((byte)color.getRed(), (byte)color.getGreen(), (byte)color.getBlue());
						float f = icon.getMinU();
						float f1 = icon.getMaxU();
						float f2 = icon.getMinV();
						float f3 = icon.getMaxV();
						ItemRenderer.renderItemIn2D(Tessellator.instance, f1, f2, f, f3, icon.getIconWidth(), icon.getIconHeight(), 0.0625F);
						GL11.glColor3f(1.0F, 1.0F, 1.0F);
						++renderPass;
					} while (renderPass < stack.getItem().getRenderPasses(stack.getItemDamage()));
				} 
			} 
			GL11.glScalef(1.0F / s, 1.0F / s, 1.0F / s);
		} 
	}

	protected ResourceLocation getEntityTexture(Entity entity) {
		return AbstractClientPlayer.locationStevePng;
	}
}
