package ab.client.render.entity;

import java.awt.Color;
import java.util.Random;

import org.lwjgl.opengl.GL11;

import ab.common.entity.EntitySword;
import net.minecraft.block.Block;
import net.minecraft.client.Minecraft;
import net.minecraft.client.entity.AbstractClientPlayer;
import net.minecraft.client.renderer.ItemRenderer;
import net.minecraft.client.renderer.RenderBlocks;
import net.minecraft.client.renderer.Tessellator;
import net.minecraft.client.renderer.entity.Render;
import net.minecraft.client.renderer.texture.TextureMap;
import net.minecraft.entity.Entity;
import net.minecraft.entity.item.EntityItem;
import net.minecraft.item.ItemStack;
import net.minecraft.util.IIcon;
import net.minecraft.util.MathHelper;
import net.minecraft.util.ResourceLocation;
import net.minecraft.world.World;
import net.minecraftforge.client.ForgeHooksClient;
import vazkii.botania.client.core.handler.ClientTickHandler;
import vazkii.botania.client.core.helper.ShaderHelper;

public class RenderEntitySword extends Render {
	
	Minecraft mc = Minecraft.getMinecraft();

	public void doRender(Entity entity, double x, double y, double z, float fl, float fl1) {
		double worldTime = (entity.worldObj == null) ? 0.0D : (ClientTickHandler.ticksInGame + fl1);
		EntitySword sword = (EntitySword)entity;
		GL11.glPushMatrix();
		GL11.glTranslated(x, y, z);
		GL11.glEnable(3042);
		GL11.glBlendFunc(770, 771);
		float angel = (float)Math.sin(-worldTime / 6.0D) * 5.0f;
		GL11.glRotatef(sword.getRotation1(), 0.0f, 1.0f, 0.0f);
		GL11.glRotatef(sword.getRotation2(), 1.0f, 0.0f, 0.0f);
		GL11.glRotatef(135.0f, 0.0F, 0.0F, 1.0F);
		GL11.glRotatef(angel, 0.0F, 0.0F, 1.0F);
		mc.renderEngine.bindTexture(TextureMap.locationItemsTexture);
		if(entity.worldObj != null)
			renderItemStack(sword.getSword(), (int)Math.min(160.0f, entity.ticksExisted * 17.67f), entity.worldObj, x, y, z);
		GL11.glDisable(3042);
		GL11.glPopMatrix();
	}
	
	public void renderItemStack(ItemStack stack, int alpha, World world, double posX, double posY, double posZ) {
		if(stack != null) {
			float s = 0.25F;
			GL11.glTranslatef(-4 * 0.0625f, -4 * 0.0625f, 0.0f);
			GL11.glScalef(s, s, s);
			GL11.glScalef(2.0F, 2.0F, 2.0F);
			if(!ForgeHooksClient.renderEntityItem(new EntityItem(world, posX, posY, posZ, stack), stack, 0.0F, 0.0F, world.rand, mc.renderEngine, RenderBlocks.getInstance(), 1)) {
				int renderPass = 0;
				do {
					IIcon icon = stack.getItem().getIcon(stack, renderPass);
					if(icon == null)
						continue; 
					Color color = new Color(stack.getItem().getColorFromItemStack(stack, renderPass));
					GL11.glColor4ub((byte)color.getRed(), (byte)color.getGreen(), (byte)color.getBlue(), (byte)alpha);
					float f = icon.getMinU();
					float f1 = icon.getMaxU();
					float f2 = icon.getMinV();
					float f3 = icon.getMaxV();
					ItemRenderer.renderItemIn2D(Tessellator.instance, f1, f2, f, f3, icon.getIconWidth(), icon.getIconHeight(), 0.0625F);
					GL11.glColor3f(1.0F, 1.0F, 1.0F);
					++renderPass;
				} while(renderPass < stack.getItem().getRenderPasses(stack.getItemDamage()));
			} 
			GL11.glScalef(1.0F / s, 1.0F / s, 1.0F / s);
		} 
	}
	
	protected ResourceLocation getEntityTexture(Entity entity) {
		return AbstractClientPlayer.locationStevePng;
	}
}